language: go
dist: xenial
os:
  - linux
branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+(-\S*)?$/
stages:
  - checks
  - test
  - build
go:
  - 1.13.x
cache:
  directories: [$GOPATH/pkg/mod]

# clone the full repo
git:
  depth: false

install: true

notifications:
  email:
    on_success: change
    on_failure: always

env:
  global: CC_TEST_REPORTER_ID=7c1eabd638b12563c95fc1e17e4abc2440612eddd97b25273c986b24faddb6ae

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
jobs:
  include:
    - stage: checks
      # script: golangci-lint run # run a bunch of code checkers/linters in parallel
      before_script:
        - glci_ver=$(grep golangci-lint .tool-versions | awk '{print $2}')
        - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v${glci_ver}
      script:
        - make download
        - make lint
    - stage: test
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - make coverage
      after_success:
        - ./cc-test-reporter format-coverage -t gocov -p $(go list -m) coverage.out
        - ./cc-test-reporter upload-coverage
        # trigger goreportcard scan
        - curl -s -X POST -F "repo=github.com/$TRAVIS_REPO_SLUG" https://goreportcard.com/checks
    - stage: build
      script:
        - GOOS=linux make # gimmie and gvm don't pass through GOOS variables :(
        - ls -altr
      arch: amd64
      env: GOOS=linux
    - stage: build
      script:
        - GOOS=linux make
        - ls -altr
      arch: arm64
      env: GOOS=linux
    - stage: build
      script:
        - GOOS=windows make
        - ls -altr
      arch: amd64
      env: GOOS=windows
    - stage: build
      script:
        - GOOS=darwin make
        - ls -altr
      arch: amd64
      env: GOOS=darwin
    # fails to build darwin/arm64 combo
    # - stage: build
    #   script:
    #     - GOOS=darwin make
    #     - ls -altr
    #   arch: arm64
    #   env: GOOS=darwin

deploy:
  - provider: releases
    edge: true
    on:
      tags: true
      condition: $TRAVIS_BUILD_STAGE_NAME = build
    token:
      secure: BsjDpZkQEG+gH87ZZC4qWb4xRQhAO22Yg08H/2eZXVzO5eSuXDL96peCBy+3jozlJ5mMDbwXnnAs9EnWBWyIMeNkLev2MoKXm3xTVI6yNxc4pflBmBg4mu3YFQQmZTqtzFr3NBy5+tcL6h/3S0KEShOb9J7csUsimHzZfA19wbOZjdyqNXo9poDekeHnT++3k/NRDfjrsDTUgUUzBYs5yNh2vVKNjcgihiv61eHlbWjgwLjJYR08po+6PCJ6hLwg3/TXqe0r7PUeNJaTk2NdY69LPxXh3sRfbmXibA8a7IudI8uLfSOKrrw6+tWDUWMz4vHfb4ETZx71wwhcBgIs5NPQJw4vlknm89kv+7aJBwjVRI9zoz9tX/TGqXSVo7C1yM3Ic788na74L2m8U6rGYUeGEAai1wbYVUqRi9hpMAhWImtKqHDFYGYI/EYoE3Rco5bpM4xx1LT/tqdu44CpPNbkzWcJF+2yxroyY/ze/mL63YwJxOCtQwXSICkawbHtmS+m9EOGjskWQ0nKIb/mpFBEhIxYJl6wTUrYvzmK/nIvO9O27b+GGk6NgFXzkY+OKoMMIL721KkKMQTH2fDPh9/GB69NVkE2olbtqL0lfxEJQ5uzdQX1LsfjM/P2qRHdrGh9oQ2PYiRDoG04R9TC4rlLNlmNUb365A+5q62WH5A=
    file_glob: true
    file: bridgr-*
    cleanup: false
    overwrite: true
