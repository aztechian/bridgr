name: Deploy and Release
on:
  push:
    tags:
      - "v[0-9].[0-9].[0-9]*"
jobs:
  release-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # os: [darwin, linux, windows]
        os: [linux]
        arch: [amd64, arm64]
        # arch: [arm64, amd64, "386", arm]
        exclude:
          - os: windows
            arch: arm64
          - os: darwin
            arch: "386"
          - os: darwin
            arch: arm
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Compile Application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make download
          make
      - name: Store Build
        uses: actions/upload-artifact@v3
        with:
          name: bridgr-${{ matrix.os }}-${{ matrix.arch }}
          path: bridgr-*
          retention-days: 1

  reportcard:
    runs-on: ubuntu-latest
    needs: release-build
    steps:
      - name: Trigger goreportcard scan
        if: ${{ !env.ACT }}
        run: |
          curl -s -X POST -F "repo=github.com/$GITHUB_REPOSITORY" https://goreportcard.com/checks

  release:
    runs-on: ubuntu-latest
    needs: release-build
    steps:
      - name: Download Build Files
        uses: actions/download-artifact@v3
      - name: Move files to root directory
        run: |
          mkdir -p release
          find . -type f | xargs -I {} cp -v {} release/
      - name: Checkout
        uses: actions/checkout@v3
        with:
          depth: 0
      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          major_pattern: "[MAJOR]"
          minor_pattern: "[MINOR]"
          version_format: "${major}.${minor}.${patch}-rc${increment}"
      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: release/*
          prerelease: ${{ contains(github.ref, '-rc') }}
