name: CI Build
on:
  - push
  - pull_request

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          # caching isn't available for golang <= 1.14
          # cache: true
      - name: Install Golang CI Lint
        run: |
          glci_ver=$(grep golangci-lint .tool-versions | awk '{print $2}')
          curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -x -s -- -b $(go env GOPATH)/bin v${glci_ver}
      # - name: Golang CI Lint
      #   uses: golangci/golangci-lint-action@v3
      - name: Install Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: v0.10.2
      - name: Run Linting
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make download
          make lint
          cat cilint.txt | reviewdog -reporter=github-pr-check -f=golangci-lint -fail-on-error=false

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Run Unit Tests
        run: make coverage
      - name: Trigger goreportcard scan
        run: |
          curl -s -X POST -F "repo=github.com/$GITHUB_REPOSITORY" https://goreportcard.com/checks
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Compile Application
        run: echo "ok"
