name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
defaults:
  run:
    shell: bash
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          # caching isn't available for golang <= 1.14
          # cache: true
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Install Golang CI Lint
        run: |
          glci_ver=$(grep golangci-lint .tool-versions | awk '{print $2}')
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v${glci_ver}
      # - name: Golang CI Lint
      #   uses: golangci/golangci-lint-action@v3
      - name: Install Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: v0.10.2
      - name: Run Linting
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make download
          make lint
          cat cilint.txt | reviewdog -reporter=github-pr-check -f=golangci-lint -fail-on-error=false

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Unit Test and Coverage
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: 7c1eabd638b12563c95fc1e17e4abc2440612eddd97b25273c986b24faddb6ae
        with:
          coverageCommand: make coverage
          prefix: github.com/aztechian/bridgr
          coverageLocations: |
            ${{github.workspace}}/coverage.out:gocov

      - name: Trigger goreportcard scan
        run: |
          curl -s -X POST -F "repo=github.com/$GITHUB_REPOSITORY" https://goreportcard.com/checks
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # os: [darwin, linux, windows]
        os: [linux]
        # arch: [arm64, amd64, 386, arm]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Compile Application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make download
          make
