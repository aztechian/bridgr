name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
defaults:
  run:
    shell: bash
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          # caching isn't available for golang <= 1.14
          # cache: true
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Setup bridger
        id: setup
        run: |
          echo "gcli_ver=$(grep golangci-lint .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT
          echo "::group::godownload"
          make download
          echo "::endgroup::"
      - name: Run Linter and Review
        uses: reviewdog/action-golangci-lint@v2
        with:
          go_version_file: "go.mod"
          reviewdog_version: v0.10.2
          reporter: github-pr-review
          golangci_lint_version: "v${{ steps.setup.outputs.gcli_ver }}"
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Unit Test and Coverage
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: 7c1eabd638b12563c95fc1e17e4abc2440612eddd97b25273c986b24faddb6ae
        with:
          coverageCommand: make coverage
          prefix: github.com/aztechian/bridgr
          coverageLocations: |
            ${{github.workspace}}/coverage.out:gocov
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [darwin, linux, windows]
        arch: [arm64, amd64, "386", arm]
        exclude:
          - os: windows
            arch: arm64
          - os: darwin
            arch: "386"
          - os: darwin
            arch: arm
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
      - name: Cache
        uses: actions/cache@v3.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomodules-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomodules
            ${{ runner.os }}-
      - name: Compile Application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make download
          make
